<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clinic Statistics</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f4f8;
        }

        .chart-container {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body class="p-6">
    <div class="max-w-6xl mx-auto">
        <h1 class="text-3xl font-semibold text-gray-800 mb-6">Clinic Statistics Dashboard</h1>

        <div class="bg-white p-4 rounded-lg shadow mb-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                    <label for="period" class="block text-sm font-medium text-gray-700 mb-2">Select Period:</label>
                    <div class="relative">
                        <select id="period"
                            class="block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
                            <option value="month">Monthly</option>
                            <option value="quarter">Quarterly</option>
                            <option value="year">Yearly</option>
                        </select>
                        <div
                            class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                                <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
            <button onclick="fetchData()"
                class="mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                Generate Charts
            </button>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="chart-container p-4">
                <h2 class="text-xl font-semibold mb-4">Total Patients</h2>
                <canvas id="patientChart"></canvas>
            </div>
            <div class="chart-container p-4">
                <h2 class="text-xl font-semibold mb-4">Total Revenue</h2>
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
    </div>

    <script>
        let patientChart, revenueChart;

        function initCharts() {
            const ctx1 = document.getElementById('patientChart').getContext('2d');
            const ctx2 = document.getElementById('revenueChart').getContext('2d');

            patientChart = new Chart(ctx1, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Number of Patients',
                        data: [],
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            revenueChart = new Chart(ctx2, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Revenue',
                        data: [],
                        backgroundColor: 'rgba(153, 102, 255, 0.6)'
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        async function fetchData() {
            const period = document.getElementById('period').value;

            try {
                const response = await axios.get('/statistics', {
                    params: { period }
                });
                updateCharts(response.data);
            } catch (error) {
                console.error('Error fetching data:', error);
                alert('Failed to fetch data. Please try again.');
            }
        }

        function updateCharts(data) {
            const labels = data.map(item => {
                if (item._id.month) return `${item._id.year}-${item._id.month}`;
                if (item._id.quarter) return `${item._id.year} Q${item._id.quarter}`;
                return item._id.year.toString();
            });

            patientChart.data.labels = labels;
            patientChart.data.datasets[0].data = data.map(item => item.count);
            patientChart.update();

            revenueChart.data.labels = labels;
            revenueChart.data.datasets[0].data = data.map(item => item.totalRevenue);
            revenueChart.update();
        }

        initCharts();
    </script>
</body>

</html>
